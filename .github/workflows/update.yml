name: Flake Update / Build

on:
  workflow_dispatch:
    inputs:
      hosts:
        description: "list of hosts to build"
        required: true
        default: "othalan,algiz"
        type: string
      flake-inputs:
        description: "list of nix flake inputs"
        default: ""
        type: string
      nix-flags:
        description: "flags forwared to nix commands"
        default: ""
        type: string
      full-build:
        description: "perform full system build for each host"
        default: false
        type: boolean

  # schedule:
  #   # At minute 00:00 on Monday, Wednesday, and Friday.
  #   - cron: 0 0 * * 1,3,5

env:
  hosts: ${{ github.event_name == 'schedule' && 'othalan,algiz' || github.event.inputs.hosts }}
  flake-inputs: ${{ github.event_name == 'schedule' && '' || github.event.inputs.flake-inputs }}
  nix-flags: ${{ github.event_name == 'schedule' && '' || github.event.inputs.nix-flags }}
  OIZYS_FLAKE: ${{ github.workspace }}

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-minimal:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: daylin-bot/actions/setup@main
      - uses: ./.github/actions/nix
        with:
          attic_token: ${{ secrets.ATTIC_TOKEN }}

      - name: install nix-eval-jobs
        run: nix profile install '.#nix-eval-jobs'

      - run: git checkout -B flake-lock

      - name: Update nix flake
        run: |
          nix flake update --commit-lock-file ${{ env.flake-inputs }}
          printf '# Flake Lock\n\n```txt\n%s```\n' \
            "$(git show -s --format='%B')" \
            >> $GITHUB_STEP_SUMMARY

      - name: Pre-build oizys
        run: |
          nix build '.#oizys'
          attic push oizys ./result

      - name: Build
        run: >
          nix run '.#oizys'
          --
          ci
          cache
          --host,="${{ env.hosts }}"
          -vv
          --
          ${{ env.nix-flags }}

      - name: Commit Updates
        uses: daylin-bot/actions/commit-and-push@main
        with:
          push-args: --set-upstream --force origin flake-lock

  build-full:
    if: ${{ inputs.full-build == true }}
    needs: build-minimal
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: daylin-bot/actions/setup@main
      - uses: ./.github/actions/nix
        with:
          attic_token: ${{ secrets.ATTIC_TOKEN }}

      - name: Pre-build oizys
        run: nix build '.#oizys'

      - name: Build Current and Updated Systems
        run: >
          nix run '.#oizys'
          --
          ci update
          --host,="${{ env.hosts }}"
          -vv
          --
          ${{ env.nix-flags }}

      - run: |
          echo "# system diffs" >> $GITHUB_STEP_SUMMARY
          hosts="${{ env.hosts }}"
          for host in ${hosts//,/ }; do
            echo "## $host" >> $GITHUB_STEP_SUMMARY
            nix run "nixpkgs#dix" -- ./$host-current ./$host-updated >> $host-summary.md
            printf '```\n%s\n```\n' "$(nix run "nixpkgs#dix" -- ./$host-current ./$host-updated)" >> $GITHUB_STEP_SUMMARY
          done

      - run: df -h

      - uses: actions/upload-artifact@v4
        with:
          name: summary
          path: "*-summary.md"
